<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- This is a checkstyle configuration file. For descriptions of what the 
	following rules do, please see the checkstyle configuration page at http://checkstyle.sourceforge.net/config.html -->

<module name="Checker">

	<module name="NewlineAtEndOfFile" />

	<module name="RegexpSingleline">
		<!-- Checks that FIXME is not 'used' in comments. -->
		<property name="format" value="((//.*)|(\*.*))FIXME" />
		<property name="message" value='Fix the FIXME."' />
	</module>

	<!-- All Java AST specific tests live under TreeWalker module. -->
	<module name="TreeWalker">

		<module name="RedundantImport">
			<property name="severity" value="error" />
		</module>

		<module name="ImportOrder">
			<property name="severity" value="warning" />
			<property name="groups" value="com.google,android,junit,net,org,java,javax" />
			<!-- This ensures that static imports go first. -->
			<property name="option" value="top" />
			<property name="tokens" value="STATIC_IMPORT, IMPORT" />
		</module>

		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<module name="JavadocMethod">
			<property name="scope" value="protected" />
			<property name="severity" value="warning" />
			<property name="allowMissingJavadoc" value="true" />
			<property name="allowMissingParamTags" value="true" />
			<property name="allowMissingReturnTag" value="true" />
			<property name="allowMissingThrowsTags" value="true" />
			<property name="allowThrowsTagsForSubclasses" value="true" />
			<property name="allowUndeclaredRTE" value="true" />
		</module>

		<module name="JavadocType">
			<property name="scope" value="protected" />
			<property name="severity" value="error" />
		</module>

		<module name="JavadocStyle">
			<property name="severity" value="warning" />
		</module>

		<!-- currently ignore NAMING CHECKS -->

		<module name="ModifierOrder">
			<!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and 
				8.4.3. The prescribed order is: public, protected, private, abstract, static, 
				final, transient, volatile, synchronized, native, strictfp -->
		</module>

		<module name="WhitespaceAround">
			<!-- Checks that various tokens are surrounded by whitespace. This includes 
				most binary operators and keywords followed by regular or curly braces. -->
			<property name="tokens"
				value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN" />
			<property name="severity" value="error" />
		</module>

		<module name="WhitespaceAfter">
			<!-- Checks that commas, semicolons and typecasts are followed by whitespace. -->
			<property name="tokens" value="COMMA, SEMI, TYPECAST" />
		</module>

		<module name="NoWhitespaceAfter">
			<!-- Checks that there is no whitespace after various unary operators. 
				Linebreaks are allowed. -->
			<property name="tokens"
				value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
			<property name="allowLineBreaks" value="true" />
			<property name="severity" value="error" />
		</module>

		<module name="NoWhitespaceBefore">
			<!-- Checks that there is no whitespace before various unary operators. 
				Linebreaks are allowed. -->
			<property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC" />
			<property name="allowLineBreaks" value="true" />
			<property name="severity" value="error" />
		</module>

	</module>

</module>
